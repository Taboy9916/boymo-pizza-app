import { useState } from 'react';
import { Button } from '@/components/ui/button.jsx';
import { Input } from '@/components/ui/input.jsx';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card.jsx';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select.jsx';
import { Badge } from '@/components/ui/badge.jsx';
import { ArrowLeft, Camera, Save, Settings, Store, Globe, MessageSquare } from 'lucide-react';
import '../App.css';

const ProfilePage = ({ onBack }) => {
  const [profileImage, setProfileImage] = useState(null);
  const [nickname, setNickname] = useState('‡∫ö‡∫≠‡∫ç');
  const [storeStatus, setStoreStatus] = useState('‡ªÄ‡∫õ‡∫µ‡∫î');
  const [selectedLanguage, setSelectedLanguage] = useState('lo');
  const [isEditing, setIsEditing] = useState(false);

  const languages = [
    { code: 'lo', name: '‡∫•‡∫≤‡∫ß', flag: 'üá±üá¶' },
    { code: 'th', name: '‡ªÑ‡∫ó', flag: 'üáπüá≠' },
    { code: 'zh', name: '‡∫à‡∫µ‡∫ô', flag: 'üá®üá≥' },
    { code: 'en', name: '‡∫≠‡∫±‡∫á‡∫Å‡∫¥‡∫î', flag: 'üá∫üá∏' },
    { code: 'vi', name: '‡∫´‡∫ß‡∫Ω‡∫î‡∫ô‡∫≤‡∫°', flag: 'üáªüá≥' }
  ];

  const storeStatuses = [
    { value: '‡ªÄ‡∫õ‡∫µ‡∫î', color: 'bg-green-500', label: '‡ªÄ‡∫õ‡∫µ‡∫î' },
    { value: '‡∫õ‡∫¥‡∫î', color: 'bg-red-500', label: '‡∫õ‡∫¥‡∫î' },
    { value: '‡∫õ‡∫±‡∫ö‡∫õ‡∫∏‡∫á', color: 'bg-yellow-500', label: '‡∫õ‡∫±‡∫ö‡∫õ‡∫∏‡∫á' },
    { value: '‡∫û‡∫±‡∫Å‡∫ß‡∫±‡∫ô‡∫ö‡∫∏‡∫ô', color: 'bg-blue-500', label: '‡∫û‡∫±‡∫Å‡∫ß‡∫±‡∫ô‡∫ö‡∫∏‡∫ô' }
  ];

  const handleImageUpload = (event) => {
    const file = event.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = (e) => {
        setProfileImage(e.target.result);
      };
      reader.readAsDataURL(file);
    }
  };

  const handleSave = () => {
    // Save logic here
    alert('‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫Å‡∫≤‡∫ô‡∫õ‡ªà‡∫Ω‡∫ô‡ªÅ‡∫õ‡∫á‡∫™‡∫≥‡ªÄ‡∫•‡∫±‡∫î!');
    setIsEditing(false);
  };

  const getCurrentLanguage = () => {
    return languages.find(lang => lang.code === selectedLanguage);
  };

  const getCurrentStatus = () => {
    return storeStatuses.find(status => status.value === storeStatus);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-800 to-green-900 p-4">
      {/* Header */}
      <div className="flex items-center justify-between mb-6">
        <Button 
          onClick={onBack}
          variant="outline"
          className="bg-purple-100 border-purple-300 text-purple-700 hover:bg-purple-200"
        >
          <ArrowLeft className="h-4 w-4 mr-2" />
          ‡∫ç‡ªâ‡∫≠‡∫ô‡∫Å‡∫±‡∫ö
        </Button>
        <h1 className="text-xl font-bold text-white">‡∫Å‡∫≤‡∫ô‡∫à‡∫±‡∫î‡∫Å‡∫≤‡∫ô‡ªÇ‡∫õ‡∫£‡ªÑ‡∫ü‡∫•‡ªå</h1>
        <div className="w-20"></div>
      </div>

      {/* Profile Image */}
      <Card className="border-purple-500 border-2 mb-6">
        <CardHeader>
          <CardTitle className="text-purple-700 flex items-center">
            <Camera className="h-5 w-5 mr-2" />
            ‡∫Æ‡∫π‡∫ö‡ªÇ‡∫õ‡∫£‡ªÑ‡∫ü‡∫•‡ªå
          </CardTitle>
        </CardHeader>
        <CardContent className="text-center">
          <div className="relative inline-block">
            <div className="w-32 h-32 bg-gray-200 rounded-full flex items-center justify-center mx-auto mb-4 overflow-hidden">
              {profileImage ? (
                <img 
                  src={profileImage} 
                  alt="Profile" 
                  className="w-full h-full object-cover"
                />
              ) : (
                <span className="text-6xl">üë©‚Äçüç≥</span>
              )}
            </div>
            <input
              type="file"
              accept="image/*"
              onChange={handleImageUpload}
              className="hidden"
              id="profile-upload"
            />
            <Button
              onClick={() => document.getElementById('profile-upload').click()}
              variant="outline"
              className="absolute bottom-0 right-0 rounded-full w-10 h-10 p-0"
            >
              <Camera className="h-4 w-4" />
            </Button>
          </div>
          <p className="text-sm text-gray-600">‡∫Å‡∫ª‡∫î‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡∫õ‡ªà‡∫Ω‡∫ô‡∫Æ‡∫π‡∫ö‡ªÇ‡∫õ‡∫£‡ªÑ‡∫ü‡∫•‡ªå</p>
        </CardContent>
      </Card>

      {/* Nickname */}
      <Card className="border-blue-500 border-2 mb-6">
        <CardHeader>
          <CardTitle className="text-blue-700">‡∫ä‡∫∑‡ªà‡∫´‡∫º‡∫¥‡ªâ‡∫ô</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="flex items-center space-x-2">
            <Input
              value={nickname}
              onChange={(e) => setNickname(e.target.value)}
              placeholder="‡∫õ‡ªâ‡∫≠‡∫ô‡∫ä‡∫∑‡ªà‡∫´‡∫º‡∫¥‡ªâ‡∫ô"
              disabled={!isEditing}
              className="flex-1"
            />
            <Button
              onClick={() => setIsEditing(!isEditing)}
              variant="outline"
              size="sm"
            >
              <Settings className="h-4 w-4" />
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* Store Status */}
      <Card className="border-orange-500 border-2 mb-6">
        <CardHeader>
          <CardTitle className="text-orange-700 flex items-center">
            <Store className="h-5 w-5 mr-2" />
            ‡∫™‡∫∞‡∫ñ‡∫≤‡∫ô‡∫∞‡∫Æ‡ªâ‡∫≤‡∫ô
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-3">
            <div className="flex items-center justify-between">
              <span className="font-medium">‡∫™‡∫∞‡∫ñ‡∫≤‡∫ô‡∫∞‡∫õ‡∫±‡∫î‡∫à‡∫∏‡∫ö‡∫±‡∫ô:</span>
              <Badge className={`${getCurrentStatus()?.color} text-white`}>
                {storeStatus}
              </Badge>
            </div>
            <Select value={storeStatus} onValueChange={setStoreStatus}>
              <SelectTrigger>
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                {storeStatuses.map((status) => (
                  <SelectItem key={status.value} value={status.value}>
                    <div className="flex items-center space-x-2">
                      <div className={`w-3 h-3 rounded-full ${status.color}`}></div>
                      <span>{status.label}</span>
                    </div>
                  </SelectItem>
                ))}
              </SelectContent>
            </Select>
          </div>
        </CardContent>
      </Card>

      {/* Language Selection */}
      <Card className="border-green-500 border-2 mb-6">
        <CardHeader>
          <CardTitle className="text-green-700 flex items-center">
            <Globe className="h-5 w-5 mr-2" />
            ‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫û‡∫≤‡∫™‡∫≤
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-3">
            <div className="flex items-center justify-between">
              <span className="font-medium">‡∫û‡∫≤‡∫™‡∫≤‡∫õ‡∫±‡∫î‡∫à‡∫∏‡∫ö‡∫±‡∫ô:</span>
              <div className="flex items-center space-x-2">
                <span className="text-2xl">{getCurrentLanguage()?.flag}</span>
                <span>{getCurrentLanguage()?.name}</span>
              </div>
            </div>
            <Select value={selectedLanguage} onValueChange={setSelectedLanguage}>
              <SelectTrigger>
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                {languages.map((lang) => (
                  <SelectItem key={lang.code} value={lang.code}>
                    <div className="flex items-center space-x-2">
                      <span className="text-xl">{lang.flag}</span>
                      <span>{lang.name}</span>
                    </div>
                  </SelectItem>
                ))}
              </SelectContent>
            </Select>
          </div>
        </CardContent>
      </Card>

      {/* Feedback Section */}
      <Card className="border-indigo-500 border-2 mb-6">
        <CardHeader>
          <CardTitle className="text-indigo-700 flex items-center">
            <MessageSquare className="h-5 w-5 mr-2" />
            Feedback ‡∫à‡∫≤‡∫Å‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="text-center py-8">
            <MessageSquare className="h-12 w-12 text-gray-400 mx-auto mb-4" />
            <p className="text-gray-600">‡∫ç‡∫±‡∫á‡∫ö‡ªç‡ªà‡∫°‡∫µ Feedback ‡∫à‡∫≤‡∫Å‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤</p>
            <p className="text-sm text-gray-500 mt-2">
              ‡∫ü‡∫µ‡ªÄ‡∫à‡∫µ‡∫ô‡∫µ‡ªâ‡∫à‡∫∞‡∫ñ‡∫∑‡∫Å‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡ªÉ‡∫ô‡∫≠‡∫∞‡∫ô‡∫≤‡∫Ñ‡∫ª‡∫î
            </p>
          </div>
        </CardContent>
      </Card>

      {/* Developer Contact */}
      <Card className="border-gray-500 border-2 mb-20">
        <CardHeader>
          <CardTitle className="text-gray-700">‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫ú‡∫π‡ªâ‡∫û‡∫±‡∫î‡∫ó‡∫∞‡∫ô‡∫≤</CardTitle>
        </CardHeader>
        <CardContent className="space-y-2">
          <div className="text-sm">
            <p><strong>‡∫ä‡∫∑‡ªà:</strong> ‡∫ó‡ªâ‡∫≤‡∫ß ‡∫™‡∫ª‡∫°‡∫´‡∫ß‡∫±‡∫á ‡∫õ‡∫¥‡∫á‡∫™‡∫∞‡∫ô‡∫µ‡ªÉ‡∫à</p>
            <p><strong>‡∫ä‡∫∑‡ªà‡∫´‡∫º‡∫¥‡ªâ‡∫ô:</strong> ‡∫ö‡∫≠‡∫ç</p>
            <p><strong>‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó/WhatsApp:</strong> 02054539859</p>
            <p><strong>Gmail:</strong> somvang.pingsanijai14@gmail.com</p>
          </div>
        </CardContent>
      </Card>

      {/* Save Button */}
      {isEditing && (
        <div className="fixed bottom-20 left-4 right-4">
          <Button
            onClick={handleSave}
            className="w-full bg-purple-600 hover:bg-purple-700 text-white py-3"
          >
            <Save className="h-4 w-4 mr-2" />
            ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫Å‡∫≤‡∫ô‡∫õ‡ªà‡∫Ω‡∫ô‡ªÅ‡∫õ‡∫á
          </Button>
        </div>
      )}
    </div>
  );
};

export default ProfilePage;

